
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000051e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000051e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000550  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009b0  00000000  00000000  000005bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000086c  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d6  00000000  00000000  000017d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000458  00000000  00000000  00001bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000bb  00000000  00000000  0000204c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00002107  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	4c d0       	rcall	.+152    	; 0x132 <main>
  9a:	15 c2       	rjmp	.+1066   	; 0x4c6 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <Timer_init>:
#include <stdio.h>
#define  PRESCALER 1024

void Timer_init(void)
{
	TCCR1B |= (1 << CS12) | (1 << CS10);
  9e:	8e b5       	in	r24, 0x2e	; 46
  a0:	85 60       	ori	r24, 0x05	; 5
  a2:	8e bd       	out	0x2e, r24	; 46
  a4:	08 95       	ret

000000a6 <measure_distance>:
}

uint8_t measure_distance(void)
{
	PORTC &= ~(1 << PC0);
  a6:	85 b3       	in	r24, 0x15	; 21
  a8:	8e 7f       	andi	r24, 0xFE	; 254
  aa:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	2a e0       	ldi	r18, 0x0A	; 10
  ae:	2a 95       	dec	r18
  b0:	f1 f7       	brne	.-4      	; 0xae <measure_distance+0x8>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <measure_distance+0xe>
	_delay_us(2);
	PORTC |= (1 << PC0);
  b4:	85 b3       	in	r24, 0x15	; 21
  b6:	81 60       	ori	r24, 0x01	; 1
  b8:	85 bb       	out	0x15, r24	; 21
  ba:	85 e3       	ldi	r24, 0x35	; 53
  bc:	8a 95       	dec	r24
  be:	f1 f7       	brne	.-4      	; 0xbc <measure_distance+0x16>
  c0:	00 00       	nop
	_delay_us(10);
	PORTC &= ~(1 << PC0);
  c2:	85 b3       	in	r24, 0x15	; 21
  c4:	8e 7f       	andi	r24, 0xFE	; 254
  c6:	85 bb       	out	0x15, r24	; 21
	
	TCNT1 = 0;
  c8:	1d bc       	out	0x2d, r1	; 45
  ca:	1c bc       	out	0x2c, r1	; 44
	while((PINC & 0x02))
  cc:	05 c0       	rjmp	.+10     	; 0xd8 <measure_distance+0x32>
	if(TCNT1 > 65000) return 0;
  ce:	8c b5       	in	r24, 0x2c	; 44
  d0:	9d b5       	in	r25, 0x2d	; 45
  d2:	89 3e       	cpi	r24, 0xE9	; 233
  d4:	9d 4f       	sbci	r25, 0xFD	; 253
  d6:	58 f5       	brcc	.+86     	; 0x12e <measure_distance+0x88>
	PORTC |= (1 << PC0);
	_delay_us(10);
	PORTC &= ~(1 << PC0);
	
	TCNT1 = 0;
	while((PINC & 0x02))
  d8:	99 99       	sbic	0x13, 1	; 19
  da:	f9 cf       	rjmp	.-14     	; 0xce <measure_distance+0x28>
	if(TCNT1 > 65000) return 0;

	TCNT1 = 0;
  dc:	1d bc       	out	0x2d, r1	; 45
  de:	1c bc       	out	0x2c, r1	; 44
	while(PINC & 0x02){
  e0:	08 c0       	rjmp	.+16     	; 0xf2 <measure_distance+0x4c>
		if (TCNT1 > 65000){
  e2:	8c b5       	in	r24, 0x2c	; 44
  e4:	9d b5       	in	r25, 0x2d	; 45
  e6:	89 3e       	cpi	r24, 0xE9	; 233
  e8:	9d 4f       	sbci	r25, 0xFD	; 253
  ea:	18 f0       	brcs	.+6      	; 0xf2 <measure_distance+0x4c>
			TCNT1 = 0;
  ec:	1d bc       	out	0x2d, r1	; 45
  ee:	1c bc       	out	0x2c, r1	; 44
			break;
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <measure_distance+0x50>
	TCNT1 = 0;
	while((PINC & 0x02))
	if(TCNT1 > 65000) return 0;

	TCNT1 = 0;
	while(PINC & 0x02){
  f2:	99 99       	sbic	0x13, 1	; 19
  f4:	f6 cf       	rjmp	.-20     	; 0xe2 <measure_distance+0x3c>
			TCNT1 = 0;
			break;
		}
	}

	double pulse_width = 1000000.0 * TCNT1 * PRESCALER / F_CPU;
  f6:	6c b5       	in	r22, 0x2c	; 44
  f8:	7d b5       	in	r23, 0x2d	; 45
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	f2 d0       	rcall	.+484    	; 0x2e4 <__floatunsisf>
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	34 e2       	ldi	r19, 0x24	; 36
 104:	44 e7       	ldi	r20, 0x74	; 116
 106:	59 e4       	ldi	r21, 0x49	; 73
 108:	7b d1       	rcall	.+758    	; 0x400 <__mulsf3>
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	40 e8       	ldi	r20, 0x80	; 128
 110:	54 e4       	ldi	r21, 0x44	; 68
 112:	76 d1       	rcall	.+748    	; 0x400 <__mulsf3>
 114:	20 e0       	ldi	r18, 0x00	; 0
 116:	34 e2       	ldi	r19, 0x24	; 36
 118:	44 e7       	ldi	r20, 0x74	; 116
 11a:	5b e4       	ldi	r21, 0x4B	; 75
 11c:	4f d0       	rcall	.+158    	; 0x1bc <__divsf3>
	
	return pulse_width / 58;
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	48 e6       	ldi	r20, 0x68	; 104
 124:	52 e4       	ldi	r21, 0x42	; 66
 126:	4a d0       	rcall	.+148    	; 0x1bc <__divsf3>
 128:	b1 d0       	rcall	.+354    	; 0x28c <__fixunssfsi>
 12a:	86 2f       	mov	r24, r22
 12c:	08 95       	ret
	_delay_us(10);
	PORTC &= ~(1 << PC0);
	
	TCNT1 = 0;
	while((PINC & 0x02))
	if(TCNT1 > 65000) return 0;
 12e:	80 e0       	ldi	r24, 0x00	; 0
	}

	double pulse_width = 1000000.0 * TCNT1 * PRESCALER / F_CPU;
	
	return pulse_width / 58;
}
 130:	08 95       	ret

00000132 <main>:

int main(void)
{
	uint8_t distance;
	
	DDRB = 0xFF;
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	87 bb       	out	0x17, r24	; 23
	DDRC |= (1 << PC0);
 136:	84 b3       	in	r24, 0x14	; 20
 138:	81 60       	ori	r24, 0x01	; 1
 13a:	84 bb       	out	0x14, r24	; 20
	DDRC &= ~(1 << PC1);
 13c:	84 b3       	in	r24, 0x14	; 20
 13e:	8d 7f       	andi	r24, 0xFD	; 253
 140:	84 bb       	out	0x14, r24	; 20
	Timer_init();
 142:	ad df       	rcall	.-166    	; 0x9e <Timer_init>
	
	while(1)
	{
		distance = measure_distance();
 144:	b0 df       	rcall	.-160    	; 0xa6 <measure_distance>
 146:	89 32       	cpi	r24, 0x29	; 41
		
		if(distance > 40) PORTB = 0b00000000;
 148:	08 f0       	brcs	.+2      	; 0x14c <main+0x1a>
 14a:	18 ba       	out	0x18, r1	; 24
 14c:	9c ed       	ldi	r25, 0xDC	; 220
		if(distance <= 40 && distance > 35) PORTB = 0b00000001;
 14e:	98 0f       	add	r25, r24
 150:	95 30       	cpi	r25, 0x05	; 5
 152:	10 f4       	brcc	.+4      	; 0x158 <main+0x26>
 154:	91 e0       	ldi	r25, 0x01	; 1
 156:	98 bb       	out	0x18, r25	; 24
 158:	91 ee       	ldi	r25, 0xE1	; 225
		if(distance <= 35 && distance > 30) PORTB = 0b00000011;
 15a:	98 0f       	add	r25, r24
 15c:	95 30       	cpi	r25, 0x05	; 5
 15e:	10 f4       	brcc	.+4      	; 0x164 <main+0x32>
 160:	93 e0       	ldi	r25, 0x03	; 3
 162:	98 bb       	out	0x18, r25	; 24
 164:	96 ee       	ldi	r25, 0xE6	; 230
		if(distance <= 30 && distance > 25) PORTB = 0b00000111;
 166:	98 0f       	add	r25, r24
 168:	95 30       	cpi	r25, 0x05	; 5
 16a:	10 f4       	brcc	.+4      	; 0x170 <main+0x3e>
 16c:	97 e0       	ldi	r25, 0x07	; 7
 16e:	98 bb       	out	0x18, r25	; 24
 170:	9b ee       	ldi	r25, 0xEB	; 235
		if(distance <= 25 && distance > 20) PORTB = 0b00001111;
 172:	98 0f       	add	r25, r24
 174:	95 30       	cpi	r25, 0x05	; 5
 176:	10 f4       	brcc	.+4      	; 0x17c <main+0x4a>
 178:	9f e0       	ldi	r25, 0x0F	; 15
 17a:	98 bb       	out	0x18, r25	; 24
 17c:	90 ef       	ldi	r25, 0xF0	; 240
		if(distance <= 20 && distance > 15) PORTB = 0b00011111;
 17e:	98 0f       	add	r25, r24
 180:	95 30       	cpi	r25, 0x05	; 5
 182:	10 f4       	brcc	.+4      	; 0x188 <main+0x56>
 184:	9f e1       	ldi	r25, 0x1F	; 31
 186:	98 bb       	out	0x18, r25	; 24
 188:	95 ef       	ldi	r25, 0xF5	; 245
		if(distance <= 15 && distance > 10) PORTB = 0b00111111;
 18a:	98 0f       	add	r25, r24
 18c:	95 30       	cpi	r25, 0x05	; 5
 18e:	10 f4       	brcc	.+4      	; 0x194 <main+0x62>
 190:	9f e3       	ldi	r25, 0x3F	; 63
 192:	98 bb       	out	0x18, r25	; 24
 194:	9a ef       	ldi	r25, 0xFA	; 250
		if(distance <= 10 && distance > 5) PORTB = 0b01111111;
 196:	98 0f       	add	r25, r24
 198:	95 30       	cpi	r25, 0x05	; 5
 19a:	10 f4       	brcc	.+4      	; 0x1a0 <main+0x6e>
 19c:	9f e7       	ldi	r25, 0x7F	; 127
 19e:	98 bb       	out	0x18, r25	; 24
 1a0:	86 30       	cpi	r24, 0x06	; 6
		if(distance <= 5) PORTB = 0b11111111;
 1a2:	10 f4       	brcc	.+4      	; 0x1a8 <main+0x76>
 1a4:	8f ef       	ldi	r24, 0xFF	; 255
 1a6:	88 bb       	out	0x18, r24	; 24
 1a8:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1aa:	81 ee       	ldi	r24, 0xE1	; 225
 1ac:	94 e0       	ldi	r25, 0x04	; 4
 1ae:	21 50       	subi	r18, 0x01	; 1
 1b0:	80 40       	sbci	r24, 0x00	; 0
 1b2:	90 40       	sbci	r25, 0x00	; 0
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <main+0x7c>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <main+0x86>
 1b8:	00 00       	nop
 1ba:	c4 cf       	rjmp	.-120    	; 0x144 <main+0x12>

000001bc <__divsf3>:
 1bc:	0c d0       	rcall	.+24     	; 0x1d6 <__divsf3x>
 1be:	e6 c0       	rjmp	.+460    	; 0x38c <__fp_round>
 1c0:	de d0       	rcall	.+444    	; 0x37e <__fp_pscB>
 1c2:	40 f0       	brcs	.+16     	; 0x1d4 <__divsf3+0x18>
 1c4:	d5 d0       	rcall	.+426    	; 0x370 <__fp_pscA>
 1c6:	30 f0       	brcs	.+12     	; 0x1d4 <__divsf3+0x18>
 1c8:	21 f4       	brne	.+8      	; 0x1d2 <__divsf3+0x16>
 1ca:	5f 3f       	cpi	r21, 0xFF	; 255
 1cc:	19 f0       	breq	.+6      	; 0x1d4 <__divsf3+0x18>
 1ce:	c7 c0       	rjmp	.+398    	; 0x35e <__fp_inf>
 1d0:	51 11       	cpse	r21, r1
 1d2:	10 c1       	rjmp	.+544    	; 0x3f4 <__fp_szero>
 1d4:	ca c0       	rjmp	.+404    	; 0x36a <__fp_nan>

000001d6 <__divsf3x>:
 1d6:	eb d0       	rcall	.+470    	; 0x3ae <__fp_split3>
 1d8:	98 f3       	brcs	.-26     	; 0x1c0 <__divsf3+0x4>

000001da <__divsf3_pse>:
 1da:	99 23       	and	r25, r25
 1dc:	c9 f3       	breq	.-14     	; 0x1d0 <__divsf3+0x14>
 1de:	55 23       	and	r21, r21
 1e0:	b1 f3       	breq	.-20     	; 0x1ce <__divsf3+0x12>
 1e2:	95 1b       	sub	r25, r21
 1e4:	55 0b       	sbc	r21, r21
 1e6:	bb 27       	eor	r27, r27
 1e8:	aa 27       	eor	r26, r26
 1ea:	62 17       	cp	r22, r18
 1ec:	73 07       	cpc	r23, r19
 1ee:	84 07       	cpc	r24, r20
 1f0:	38 f0       	brcs	.+14     	; 0x200 <__divsf3_pse+0x26>
 1f2:	9f 5f       	subi	r25, 0xFF	; 255
 1f4:	5f 4f       	sbci	r21, 0xFF	; 255
 1f6:	22 0f       	add	r18, r18
 1f8:	33 1f       	adc	r19, r19
 1fa:	44 1f       	adc	r20, r20
 1fc:	aa 1f       	adc	r26, r26
 1fe:	a9 f3       	breq	.-22     	; 0x1ea <__divsf3_pse+0x10>
 200:	33 d0       	rcall	.+102    	; 0x268 <__divsf3_pse+0x8e>
 202:	0e 2e       	mov	r0, r30
 204:	3a f0       	brmi	.+14     	; 0x214 <__divsf3_pse+0x3a>
 206:	e0 e8       	ldi	r30, 0x80	; 128
 208:	30 d0       	rcall	.+96     	; 0x26a <__divsf3_pse+0x90>
 20a:	91 50       	subi	r25, 0x01	; 1
 20c:	50 40       	sbci	r21, 0x00	; 0
 20e:	e6 95       	lsr	r30
 210:	00 1c       	adc	r0, r0
 212:	ca f7       	brpl	.-14     	; 0x206 <__divsf3_pse+0x2c>
 214:	29 d0       	rcall	.+82     	; 0x268 <__divsf3_pse+0x8e>
 216:	fe 2f       	mov	r31, r30
 218:	27 d0       	rcall	.+78     	; 0x268 <__divsf3_pse+0x8e>
 21a:	66 0f       	add	r22, r22
 21c:	77 1f       	adc	r23, r23
 21e:	88 1f       	adc	r24, r24
 220:	bb 1f       	adc	r27, r27
 222:	26 17       	cp	r18, r22
 224:	37 07       	cpc	r19, r23
 226:	48 07       	cpc	r20, r24
 228:	ab 07       	cpc	r26, r27
 22a:	b0 e8       	ldi	r27, 0x80	; 128
 22c:	09 f0       	breq	.+2      	; 0x230 <__divsf3_pse+0x56>
 22e:	bb 0b       	sbc	r27, r27
 230:	80 2d       	mov	r24, r0
 232:	bf 01       	movw	r22, r30
 234:	ff 27       	eor	r31, r31
 236:	93 58       	subi	r25, 0x83	; 131
 238:	5f 4f       	sbci	r21, 0xFF	; 255
 23a:	2a f0       	brmi	.+10     	; 0x246 <__divsf3_pse+0x6c>
 23c:	9e 3f       	cpi	r25, 0xFE	; 254
 23e:	51 05       	cpc	r21, r1
 240:	68 f0       	brcs	.+26     	; 0x25c <__divsf3_pse+0x82>
 242:	8d c0       	rjmp	.+282    	; 0x35e <__fp_inf>
 244:	d7 c0       	rjmp	.+430    	; 0x3f4 <__fp_szero>
 246:	5f 3f       	cpi	r21, 0xFF	; 255
 248:	ec f3       	brlt	.-6      	; 0x244 <__divsf3_pse+0x6a>
 24a:	98 3e       	cpi	r25, 0xE8	; 232
 24c:	dc f3       	brlt	.-10     	; 0x244 <__divsf3_pse+0x6a>
 24e:	86 95       	lsr	r24
 250:	77 95       	ror	r23
 252:	67 95       	ror	r22
 254:	b7 95       	ror	r27
 256:	f7 95       	ror	r31
 258:	9f 5f       	subi	r25, 0xFF	; 255
 25a:	c9 f7       	brne	.-14     	; 0x24e <__divsf3_pse+0x74>
 25c:	88 0f       	add	r24, r24
 25e:	91 1d       	adc	r25, r1
 260:	96 95       	lsr	r25
 262:	87 95       	ror	r24
 264:	97 f9       	bld	r25, 7
 266:	08 95       	ret
 268:	e1 e0       	ldi	r30, 0x01	; 1
 26a:	66 0f       	add	r22, r22
 26c:	77 1f       	adc	r23, r23
 26e:	88 1f       	adc	r24, r24
 270:	bb 1f       	adc	r27, r27
 272:	62 17       	cp	r22, r18
 274:	73 07       	cpc	r23, r19
 276:	84 07       	cpc	r24, r20
 278:	ba 07       	cpc	r27, r26
 27a:	20 f0       	brcs	.+8      	; 0x284 <__divsf3_pse+0xaa>
 27c:	62 1b       	sub	r22, r18
 27e:	73 0b       	sbc	r23, r19
 280:	84 0b       	sbc	r24, r20
 282:	ba 0b       	sbc	r27, r26
 284:	ee 1f       	adc	r30, r30
 286:	88 f7       	brcc	.-30     	; 0x26a <__divsf3_pse+0x90>
 288:	e0 95       	com	r30
 28a:	08 95       	ret

0000028c <__fixunssfsi>:
 28c:	98 d0       	rcall	.+304    	; 0x3be <__fp_splitA>
 28e:	88 f0       	brcs	.+34     	; 0x2b2 <__fixunssfsi+0x26>
 290:	9f 57       	subi	r25, 0x7F	; 127
 292:	90 f0       	brcs	.+36     	; 0x2b8 <__fixunssfsi+0x2c>
 294:	b9 2f       	mov	r27, r25
 296:	99 27       	eor	r25, r25
 298:	b7 51       	subi	r27, 0x17	; 23
 29a:	a0 f0       	brcs	.+40     	; 0x2c4 <__fixunssfsi+0x38>
 29c:	d1 f0       	breq	.+52     	; 0x2d2 <__fixunssfsi+0x46>
 29e:	66 0f       	add	r22, r22
 2a0:	77 1f       	adc	r23, r23
 2a2:	88 1f       	adc	r24, r24
 2a4:	99 1f       	adc	r25, r25
 2a6:	1a f0       	brmi	.+6      	; 0x2ae <__fixunssfsi+0x22>
 2a8:	ba 95       	dec	r27
 2aa:	c9 f7       	brne	.-14     	; 0x29e <__fixunssfsi+0x12>
 2ac:	12 c0       	rjmp	.+36     	; 0x2d2 <__fixunssfsi+0x46>
 2ae:	b1 30       	cpi	r27, 0x01	; 1
 2b0:	81 f0       	breq	.+32     	; 0x2d2 <__fixunssfsi+0x46>
 2b2:	9f d0       	rcall	.+318    	; 0x3f2 <__fp_zero>
 2b4:	b1 e0       	ldi	r27, 0x01	; 1
 2b6:	08 95       	ret
 2b8:	9c c0       	rjmp	.+312    	; 0x3f2 <__fp_zero>
 2ba:	67 2f       	mov	r22, r23
 2bc:	78 2f       	mov	r23, r24
 2be:	88 27       	eor	r24, r24
 2c0:	b8 5f       	subi	r27, 0xF8	; 248
 2c2:	39 f0       	breq	.+14     	; 0x2d2 <__fixunssfsi+0x46>
 2c4:	b9 3f       	cpi	r27, 0xF9	; 249
 2c6:	cc f3       	brlt	.-14     	; 0x2ba <__fixunssfsi+0x2e>
 2c8:	86 95       	lsr	r24
 2ca:	77 95       	ror	r23
 2cc:	67 95       	ror	r22
 2ce:	b3 95       	inc	r27
 2d0:	d9 f7       	brne	.-10     	; 0x2c8 <__fixunssfsi+0x3c>
 2d2:	3e f4       	brtc	.+14     	; 0x2e2 <__fixunssfsi+0x56>
 2d4:	90 95       	com	r25
 2d6:	80 95       	com	r24
 2d8:	70 95       	com	r23
 2da:	61 95       	neg	r22
 2dc:	7f 4f       	sbci	r23, 0xFF	; 255
 2de:	8f 4f       	sbci	r24, 0xFF	; 255
 2e0:	9f 4f       	sbci	r25, 0xFF	; 255
 2e2:	08 95       	ret

000002e4 <__floatunsisf>:
 2e4:	e8 94       	clt
 2e6:	09 c0       	rjmp	.+18     	; 0x2fa <__floatsisf+0x12>

000002e8 <__floatsisf>:
 2e8:	97 fb       	bst	r25, 7
 2ea:	3e f4       	brtc	.+14     	; 0x2fa <__floatsisf+0x12>
 2ec:	90 95       	com	r25
 2ee:	80 95       	com	r24
 2f0:	70 95       	com	r23
 2f2:	61 95       	neg	r22
 2f4:	7f 4f       	sbci	r23, 0xFF	; 255
 2f6:	8f 4f       	sbci	r24, 0xFF	; 255
 2f8:	9f 4f       	sbci	r25, 0xFF	; 255
 2fa:	99 23       	and	r25, r25
 2fc:	a9 f0       	breq	.+42     	; 0x328 <__floatsisf+0x40>
 2fe:	f9 2f       	mov	r31, r25
 300:	96 e9       	ldi	r25, 0x96	; 150
 302:	bb 27       	eor	r27, r27
 304:	93 95       	inc	r25
 306:	f6 95       	lsr	r31
 308:	87 95       	ror	r24
 30a:	77 95       	ror	r23
 30c:	67 95       	ror	r22
 30e:	b7 95       	ror	r27
 310:	f1 11       	cpse	r31, r1
 312:	f8 cf       	rjmp	.-16     	; 0x304 <__floatsisf+0x1c>
 314:	fa f4       	brpl	.+62     	; 0x354 <__floatsisf+0x6c>
 316:	bb 0f       	add	r27, r27
 318:	11 f4       	brne	.+4      	; 0x31e <__floatsisf+0x36>
 31a:	60 ff       	sbrs	r22, 0
 31c:	1b c0       	rjmp	.+54     	; 0x354 <__floatsisf+0x6c>
 31e:	6f 5f       	subi	r22, 0xFF	; 255
 320:	7f 4f       	sbci	r23, 0xFF	; 255
 322:	8f 4f       	sbci	r24, 0xFF	; 255
 324:	9f 4f       	sbci	r25, 0xFF	; 255
 326:	16 c0       	rjmp	.+44     	; 0x354 <__floatsisf+0x6c>
 328:	88 23       	and	r24, r24
 32a:	11 f0       	breq	.+4      	; 0x330 <__floatsisf+0x48>
 32c:	96 e9       	ldi	r25, 0x96	; 150
 32e:	11 c0       	rjmp	.+34     	; 0x352 <__floatsisf+0x6a>
 330:	77 23       	and	r23, r23
 332:	21 f0       	breq	.+8      	; 0x33c <__floatsisf+0x54>
 334:	9e e8       	ldi	r25, 0x8E	; 142
 336:	87 2f       	mov	r24, r23
 338:	76 2f       	mov	r23, r22
 33a:	05 c0       	rjmp	.+10     	; 0x346 <__floatsisf+0x5e>
 33c:	66 23       	and	r22, r22
 33e:	71 f0       	breq	.+28     	; 0x35c <__floatsisf+0x74>
 340:	96 e8       	ldi	r25, 0x86	; 134
 342:	86 2f       	mov	r24, r22
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	2a f0       	brmi	.+10     	; 0x354 <__floatsisf+0x6c>
 34a:	9a 95       	dec	r25
 34c:	66 0f       	add	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	da f7       	brpl	.-10     	; 0x34a <__floatsisf+0x62>
 354:	88 0f       	add	r24, r24
 356:	96 95       	lsr	r25
 358:	87 95       	ror	r24
 35a:	97 f9       	bld	r25, 7
 35c:	08 95       	ret

0000035e <__fp_inf>:
 35e:	97 f9       	bld	r25, 7
 360:	9f 67       	ori	r25, 0x7F	; 127
 362:	80 e8       	ldi	r24, 0x80	; 128
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	08 95       	ret

0000036a <__fp_nan>:
 36a:	9f ef       	ldi	r25, 0xFF	; 255
 36c:	80 ec       	ldi	r24, 0xC0	; 192
 36e:	08 95       	ret

00000370 <__fp_pscA>:
 370:	00 24       	eor	r0, r0
 372:	0a 94       	dec	r0
 374:	16 16       	cp	r1, r22
 376:	17 06       	cpc	r1, r23
 378:	18 06       	cpc	r1, r24
 37a:	09 06       	cpc	r0, r25
 37c:	08 95       	ret

0000037e <__fp_pscB>:
 37e:	00 24       	eor	r0, r0
 380:	0a 94       	dec	r0
 382:	12 16       	cp	r1, r18
 384:	13 06       	cpc	r1, r19
 386:	14 06       	cpc	r1, r20
 388:	05 06       	cpc	r0, r21
 38a:	08 95       	ret

0000038c <__fp_round>:
 38c:	09 2e       	mov	r0, r25
 38e:	03 94       	inc	r0
 390:	00 0c       	add	r0, r0
 392:	11 f4       	brne	.+4      	; 0x398 <__fp_round+0xc>
 394:	88 23       	and	r24, r24
 396:	52 f0       	brmi	.+20     	; 0x3ac <__fp_round+0x20>
 398:	bb 0f       	add	r27, r27
 39a:	40 f4       	brcc	.+16     	; 0x3ac <__fp_round+0x20>
 39c:	bf 2b       	or	r27, r31
 39e:	11 f4       	brne	.+4      	; 0x3a4 <__fp_round+0x18>
 3a0:	60 ff       	sbrs	r22, 0
 3a2:	04 c0       	rjmp	.+8      	; 0x3ac <__fp_round+0x20>
 3a4:	6f 5f       	subi	r22, 0xFF	; 255
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	08 95       	ret

000003ae <__fp_split3>:
 3ae:	57 fd       	sbrc	r21, 7
 3b0:	90 58       	subi	r25, 0x80	; 128
 3b2:	44 0f       	add	r20, r20
 3b4:	55 1f       	adc	r21, r21
 3b6:	59 f0       	breq	.+22     	; 0x3ce <__fp_splitA+0x10>
 3b8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ba:	71 f0       	breq	.+28     	; 0x3d8 <__fp_splitA+0x1a>
 3bc:	47 95       	ror	r20

000003be <__fp_splitA>:
 3be:	88 0f       	add	r24, r24
 3c0:	97 fb       	bst	r25, 7
 3c2:	99 1f       	adc	r25, r25
 3c4:	61 f0       	breq	.+24     	; 0x3de <__fp_splitA+0x20>
 3c6:	9f 3f       	cpi	r25, 0xFF	; 255
 3c8:	79 f0       	breq	.+30     	; 0x3e8 <__fp_splitA+0x2a>
 3ca:	87 95       	ror	r24
 3cc:	08 95       	ret
 3ce:	12 16       	cp	r1, r18
 3d0:	13 06       	cpc	r1, r19
 3d2:	14 06       	cpc	r1, r20
 3d4:	55 1f       	adc	r21, r21
 3d6:	f2 cf       	rjmp	.-28     	; 0x3bc <__fp_split3+0xe>
 3d8:	46 95       	lsr	r20
 3da:	f1 df       	rcall	.-30     	; 0x3be <__fp_splitA>
 3dc:	08 c0       	rjmp	.+16     	; 0x3ee <__fp_splitA+0x30>
 3de:	16 16       	cp	r1, r22
 3e0:	17 06       	cpc	r1, r23
 3e2:	18 06       	cpc	r1, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	f1 cf       	rjmp	.-30     	; 0x3ca <__fp_splitA+0xc>
 3e8:	86 95       	lsr	r24
 3ea:	71 05       	cpc	r23, r1
 3ec:	61 05       	cpc	r22, r1
 3ee:	08 94       	sec
 3f0:	08 95       	ret

000003f2 <__fp_zero>:
 3f2:	e8 94       	clt

000003f4 <__fp_szero>:
 3f4:	bb 27       	eor	r27, r27
 3f6:	66 27       	eor	r22, r22
 3f8:	77 27       	eor	r23, r23
 3fa:	cb 01       	movw	r24, r22
 3fc:	97 f9       	bld	r25, 7
 3fe:	08 95       	ret

00000400 <__mulsf3>:
 400:	0b d0       	rcall	.+22     	; 0x418 <__mulsf3x>
 402:	c4 cf       	rjmp	.-120    	; 0x38c <__fp_round>
 404:	b5 df       	rcall	.-150    	; 0x370 <__fp_pscA>
 406:	28 f0       	brcs	.+10     	; 0x412 <__mulsf3+0x12>
 408:	ba df       	rcall	.-140    	; 0x37e <__fp_pscB>
 40a:	18 f0       	brcs	.+6      	; 0x412 <__mulsf3+0x12>
 40c:	95 23       	and	r25, r21
 40e:	09 f0       	breq	.+2      	; 0x412 <__mulsf3+0x12>
 410:	a6 cf       	rjmp	.-180    	; 0x35e <__fp_inf>
 412:	ab cf       	rjmp	.-170    	; 0x36a <__fp_nan>
 414:	11 24       	eor	r1, r1
 416:	ee cf       	rjmp	.-36     	; 0x3f4 <__fp_szero>

00000418 <__mulsf3x>:
 418:	ca df       	rcall	.-108    	; 0x3ae <__fp_split3>
 41a:	a0 f3       	brcs	.-24     	; 0x404 <__mulsf3+0x4>

0000041c <__mulsf3_pse>:
 41c:	95 9f       	mul	r25, r21
 41e:	d1 f3       	breq	.-12     	; 0x414 <__mulsf3+0x14>
 420:	95 0f       	add	r25, r21
 422:	50 e0       	ldi	r21, 0x00	; 0
 424:	55 1f       	adc	r21, r21
 426:	62 9f       	mul	r22, r18
 428:	f0 01       	movw	r30, r0
 42a:	72 9f       	mul	r23, r18
 42c:	bb 27       	eor	r27, r27
 42e:	f0 0d       	add	r31, r0
 430:	b1 1d       	adc	r27, r1
 432:	63 9f       	mul	r22, r19
 434:	aa 27       	eor	r26, r26
 436:	f0 0d       	add	r31, r0
 438:	b1 1d       	adc	r27, r1
 43a:	aa 1f       	adc	r26, r26
 43c:	64 9f       	mul	r22, r20
 43e:	66 27       	eor	r22, r22
 440:	b0 0d       	add	r27, r0
 442:	a1 1d       	adc	r26, r1
 444:	66 1f       	adc	r22, r22
 446:	82 9f       	mul	r24, r18
 448:	22 27       	eor	r18, r18
 44a:	b0 0d       	add	r27, r0
 44c:	a1 1d       	adc	r26, r1
 44e:	62 1f       	adc	r22, r18
 450:	73 9f       	mul	r23, r19
 452:	b0 0d       	add	r27, r0
 454:	a1 1d       	adc	r26, r1
 456:	62 1f       	adc	r22, r18
 458:	83 9f       	mul	r24, r19
 45a:	a0 0d       	add	r26, r0
 45c:	61 1d       	adc	r22, r1
 45e:	22 1f       	adc	r18, r18
 460:	74 9f       	mul	r23, r20
 462:	33 27       	eor	r19, r19
 464:	a0 0d       	add	r26, r0
 466:	61 1d       	adc	r22, r1
 468:	23 1f       	adc	r18, r19
 46a:	84 9f       	mul	r24, r20
 46c:	60 0d       	add	r22, r0
 46e:	21 1d       	adc	r18, r1
 470:	82 2f       	mov	r24, r18
 472:	76 2f       	mov	r23, r22
 474:	6a 2f       	mov	r22, r26
 476:	11 24       	eor	r1, r1
 478:	9f 57       	subi	r25, 0x7F	; 127
 47a:	50 40       	sbci	r21, 0x00	; 0
 47c:	8a f0       	brmi	.+34     	; 0x4a0 <__mulsf3_pse+0x84>
 47e:	e1 f0       	breq	.+56     	; 0x4b8 <__mulsf3_pse+0x9c>
 480:	88 23       	and	r24, r24
 482:	4a f0       	brmi	.+18     	; 0x496 <__mulsf3_pse+0x7a>
 484:	ee 0f       	add	r30, r30
 486:	ff 1f       	adc	r31, r31
 488:	bb 1f       	adc	r27, r27
 48a:	66 1f       	adc	r22, r22
 48c:	77 1f       	adc	r23, r23
 48e:	88 1f       	adc	r24, r24
 490:	91 50       	subi	r25, 0x01	; 1
 492:	50 40       	sbci	r21, 0x00	; 0
 494:	a9 f7       	brne	.-22     	; 0x480 <__mulsf3_pse+0x64>
 496:	9e 3f       	cpi	r25, 0xFE	; 254
 498:	51 05       	cpc	r21, r1
 49a:	70 f0       	brcs	.+28     	; 0x4b8 <__mulsf3_pse+0x9c>
 49c:	60 cf       	rjmp	.-320    	; 0x35e <__fp_inf>
 49e:	aa cf       	rjmp	.-172    	; 0x3f4 <__fp_szero>
 4a0:	5f 3f       	cpi	r21, 0xFF	; 255
 4a2:	ec f3       	brlt	.-6      	; 0x49e <__mulsf3_pse+0x82>
 4a4:	98 3e       	cpi	r25, 0xE8	; 232
 4a6:	dc f3       	brlt	.-10     	; 0x49e <__mulsf3_pse+0x82>
 4a8:	86 95       	lsr	r24
 4aa:	77 95       	ror	r23
 4ac:	67 95       	ror	r22
 4ae:	b7 95       	ror	r27
 4b0:	f7 95       	ror	r31
 4b2:	e7 95       	ror	r30
 4b4:	9f 5f       	subi	r25, 0xFF	; 255
 4b6:	c1 f7       	brne	.-16     	; 0x4a8 <__mulsf3_pse+0x8c>
 4b8:	fe 2b       	or	r31, r30
 4ba:	88 0f       	add	r24, r24
 4bc:	91 1d       	adc	r25, r1
 4be:	96 95       	lsr	r25
 4c0:	87 95       	ror	r24
 4c2:	97 f9       	bld	r25, 7
 4c4:	08 95       	ret

000004c6 <_exit>:
 4c6:	f8 94       	cli

000004c8 <__stop_program>:
 4c8:	ff cf       	rjmp	.-2      	; 0x4c8 <__stop_program>
